# Просто типизированное лямбда-исчисление (Simple Type Theory)

Является самой простой системой типизации лямбда-исчисления. Вводит только один тип для всех термов. В такой системе типизации каждый терм является либо атомом, либо абстракцией.

Множество типом определяется следующим образом:
1. $\alpha, \beta, \gamma, \ldots \in \mathbb{T}$ — типы переменных (атомов).
2. $\sigma, \tau \in \mathbb{T} \Rightarrow (\sigma \rightarrow \tau ) \in \mathbb{T}$ — типы функций (абстракций).

Или использую нотацию Бэкуса-Наура:
$$
\begin{array}{l}
\mathbb{T} ::= \mathbb{V} \mid \ldots \mid (\sigma \rightarrow \tau) \\
\end{array}
$$

$\mathbb{V} ::= {\alpha, \beta, \gamma, \ldots}$ — множество переменных (атомов).

----------

Соглашение о типизации:
1. $\alpha, \beta, \gamma, \ldots$ — типы переменных (атомов).
2. $\sigma, \tau, \ldots$ — типы произвольных термов.

----------

Стрелка право ассоциативна, поэтому тип $\sigma \rightarrow \tau \rightarrow \rho$ можно записать как $\sigma \rightarrow (\tau \rightarrow \rho)$.

## Типизация термов

Если терм переменная, то он может иметь любой тип:
$$
\begin{align}
& x : \alpha \\
& y : \alpha \rightarrow \beta \\
& z : (\alpha \rightarrow \beta) \rightarrow \gamma \\
\end{align}
$$

Если терм аппликация $F\ M$, то типы термов должны совпадать:

- $F : \sigma \rightarrow \tau$ — функция, которая принимает аргумент типа $\sigma$ и возвращает значение типа $\tau$.
- $M : \sigma$ — аргумент функции.
- $F\ M : \tau$ — аппликация, как результат применения функции к аргументу, должна иметь тип $\tau$.

Если терм абстракция $\lambda x^\alpha . M$, то тип терма должен быть функцией (стрелочным)

- $M : \tau$ — тело абстракции.
- $x : \sigma$ — тип аргумента.
- $\lambda x. M : \sigma \rightarrow \tau$ — абстракция, как функция, должна иметь тип $\sigma \rightarrow \tau$.


### Пример

$$
\begin{align}
& x : \alpha \\
& \lambda x. x : \alpha \rightarrow \alpha \\
\end{align}
$$

Вопрос в том, что нужно ли указывать явно тип аргумента в абстракции? Здесь заключается разница в стилях типизации: стиле Карри и стиле Чёрча.

1. Не указывать тип в абстракции. Тогда тип аргумента будет выводиться автоматически и может быть неоднозначным, допустимо несколько вариантов типов для одного терма.
   1. $\lambda x. x : \alpha → \alpha$
   2. $\lambda x. x : \beta → \beta$
   3. $\lambda x. x : (\alpha → \beta) → (\alpha → \beta)$
   4. ...
2. Указывать тип аргумента явно. Тогда тип аргумента будет фиксированным и однозначным.
   1. $\lambda x^\alpha. x : \alpha → \alpha$^[Мы часто будем писать $\lambda x^\alpha. M$ вместо $\lambda x : \alpha. M$, указывая тип аргумента вверху для просты чтения]

## Предтермы (псевдотермы)

Предтермы — это термы, которые не являются корректными в простой типизации. Например, терм $\lambda x. x\ x$ не может быть типизирован в простой типизации, так как он использует переменную $x$ в разных контекстах.

## Объявление

Объявление типа терма в простой типизации выглядит следующим образом:

$$
\begin{align}
& x : \alpha \\
& f : \alpha → \beta \\
& g : (\alpha → \beta) → \gamma \\
\end{align}
$$

## Контекст

Контекст — это множество объявлений типов для переменных. Контекст обозначается $\Gamma$ и может быть пустым или содержать объявления типов.

$$
\begin{align}
& \Gamma = \{x : \alpha, y : \beta, z : \gamma\} \\
\end{align}
$$

Скобки $\{\}$ обозначающие множество, могут быть опущены. Тогда контекст будет выглядеть так:

$$
\begin{align}
& \Gamma = x : \alpha, y : \beta, z : \gamma \\
\end{align}
$$

## Расширение контекста

Над контекстом можно выполнять операцию расширения, добавляя новые объявления типов.

$$
\begin{align}
& \Delta = \Gamma, h : \alpha → \gamma = x : \alpha, y : \beta, z : \gamma, h : \alpha → \gamma \\
\end{align}
$$

## Типизация терма

утверждение $M : \tau$ (терм $M$ имеет тип $\tau$) в контексте $\Gamma$ называется **выводимым**, если существует последовательность правил вывода, которая приводит к этому утверждению.

$$
\begin{align}
& \Gamma \vdash M : \tau \\
\end{align}
$$

### Правила вывода (по Карри)

1. Переменная в контексте (аксиома): $x : \alpha \in \Gamma \Rightarrow \Gamma \vdash x : \alpha$
2. Аппликация (удаление →): если $\Gamma \vdash M : \sigma \rightarrow \tau$ и $\Gamma \vdash N : \sigma$, то $M\Gamma \vdash M\ N : \tau$
3. Абстракция (введение →): если $\Gamma, x : \sigma \vdash M : \tau$, то $\Gamma \vdash \lambda x. M : \sigma \rightarrow \tau$

Если существует выводимость $M : \tau$ в контексте $\Gamma$, то терм $M$
называется **типизируемым** (допустимым) в контексте $\Gamma$.

### Правила вывода (по Чёрчу)

1. Переменная в контексте (аксиома): $x : \alpha \in \Gamma \Rightarrow \Gamma \vdash x : \alpha$
2. Аппликация (удаление →): если $\Gamma \vdash M : \sigma \rightarrow \tau$ и $\Gamma \vdash N : \sigma$, то $\Gamma \vdash M\ N : \tau$
3. Абстракция (введение →): если $\Gamma, x : \sigma \vdash M : \tau$, то $\Gamma \vdash \lambda x^\sigma. M : \sigma \rightarrow \tau$

